generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  calorie Int @default(2000)
  protein Int @default(60)

  days Day[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Day {
  id Int @id @default(autoincrement())

  date  String
  foods Food[]

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([date, userId])
}

model Food {
  id Int @id @default(autoincrement())

  name String

  servings Int
  calorie  Int
  protein  Int

  day   Day @relation(fields: [dayId], references: [id])
  dayId Int
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
